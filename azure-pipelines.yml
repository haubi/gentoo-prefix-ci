# Docker image
# Build a Docker image to deploy, run, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# Everything must be under a 'job' to be able to set the timeoutInMinutes
jobs:
  - job: "Cygwin"
    timeoutInMinutes: 0
    strategy:
      matrix:
        Server_2012R2:
          server_version: '2012'
        Server_2016:
          server_version: '2016'
        Server_2019:
          server_version: '2019'
    pool:
      name: 'Provided Windows $(server_version)'
    steps:
    - script: set
      displayName: 'Cygwin Info'
    - powershell: PowerShell -File cygwin/setup.ps1 2>&1 > cygwin-setup.out
      timeoutInMinutes: 0
      displayName: 'perform Cygwin Setup'
    - powershell: cat cygwin-setup.out
      timeoutInMinutes: 0
      displayName: 'show Cygwin Setup'
    - powershell: PowerShell -File cygwin/prefix.ps1 2>&1 > cygwin-prefix.out
      timeoutInMinutes: 0
      displayName: 'perform Cygwin Prefix'
    - powershell: cat cygwin-prefix.out
      timeoutInMinutes: 0
      displayName: 'show Cygwin Prefix'

  - job: "MacOS"
    timeoutInMinutes: 0
    pool:
      vmImage: 'macOS-10.13'
    steps:
    - script: set
      displayName: 'MacOS Info'
    - script: ./macos/prefix.sh
      timeoutInMinutes: 0
      displayName: 'MacOS Prefix'

  - job: "Docker"
    timeoutInMinutes: 0
    strategy:
      matrix:
        fedora:
          docker_os: fedora
          prefix_rap: no
          prefix_32bit: no
        fedora_x86:
          docker_os: fedora
          prefix_rap: no
          prefix_32bit: yes
        fedora_rap:
          docker_os: fedora
          prefix_rap: yes
          prefix_32bit: no
        fedora_rap_x86:
          docker_os: fedora
          prefix_rap: yes
          prefix_32bit: yes
        fedora28:
          docker_os: fedora28
          prefix_rap: no
          prefix_32bit: no
        fedora28_x86:
          docker_os: fedora28
          prefix_rap: no
          prefix_32bit: yes
        fedora28_rap:
          docker_os: fedora28
          prefix_rap: yes
          prefix_32bit: no
        fedora28_rap_x86:
          docker_os: fedora28
          prefix_rap: yes
          prefix_32bit: yes
        opensuse:
          docker_os: opensuse
          prefix_rap: no
          prefix_32bit: no
        opensuse_x86:
          docker_os: opensuse
          prefix_rap: no
          prefix_32bit: yes
        opensuse_rap:
          docker_os: opensuse
          prefix_rap: yes
          prefix_32bit: no
        opensuse_rap_x86:
          docker_os: opensuse
          prefix_rap: yes
          prefix_32bit: yes
        ubuntu_rap:
          docker_os: ubuntu
          prefix_rap: yes
          prefix_32bit: no
        ubuntu_rap_x86:
          docker_os: ubuntu
          prefix_rap: yes
          prefix_32bit: yes
        ubuntu16_rap:
          docker_os: ubuntu16
          prefix_rap: yes
          prefix_32bit: no
        ubuntu16_rap_x86:
          docker_os: ubuntu16
          prefix_rap: yes
          prefix_32bit: yes
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - script: uname -a; cat /proc/cpuinfo; cat /proc/meminfo; declare -p; cat /etc/*-release; ls -l; pwd
      displayName: 'Machine Info'
    - script: cat docker/Dockerfile.{$(docker_os),linux-user,prefix-bootstrap,entrypoint}
              | docker build -f - --build-arg=BOOTSTRAP_OPTS="--force-32bit=$(prefix_32bit) --rap=$(prefix_rap)" .
      displayName: '$(docker_os) force-32bit=$(prefix_32bit) rap=$(prefix_rap) Prefix'
      timeoutInMinutes: 0

