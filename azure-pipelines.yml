# Docker image
# Build a Docker image to deploy, run, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# do not build anything just because we commit to the pipeline
trigger:
  branches:
    exclude:
    - '*'

# instead, perform scheduled builds only (besides manually queued ones)
schedules:
  - cron: "0 12 * * 1"
    displayName: Weekly build
    branches:
      include:
      - master
    always: true

stages:
  - stage: "cygwin2019_First"
    dependsOn: []
    jobs:
      - job: "Prefix"
        timeoutInMinutes: 0
        strategy:
          matrix:
            guest64:
              bit32: no
              guest: yes
        pool:
          vmImage: windows-2019
        steps:
        - bash: docker login --username $(DockerHub_user) --password '$(DockerHub_pass)'
          displayName: 'Docker Login'
        - bash: ./linux/docker-bootstrap.sh --from-os=cygwin2019 --force-32bit=$(bit32) --guest=$(guest) --timeout=5h --docker-push=yes
          displayName: 'Bootstrap'
          timeoutInMinutes: 0
  - stage: "cygwin2019_Second"
    dependsOn: [ "cygwin2019_First" ]
    condition: always()
    jobs:
      - job: "Prefix"
        timeoutInMinutes: 0
        strategy:
          matrix:
            guest64:
              bit32: no
              guest: yes
        pool:
          vmImage: windows-2019
        steps:
        - bash: docker login --username $(DockerHub_user) --password '$(DockerHub_pass)'
          displayName: 'Docker Login'
        - bash: ./linux/docker-bootstrap.sh --from-os=cygwin2019 --force-32bit=$(bit32) --guest=$(guest) --timeout=5h --resume=yes --docker-push=yes
          displayName: 'Bootstrap'
          timeoutInMinutes: 0
  - stage: "cygwin2019_Third"
    dependsOn: [ "cygwin2019_Second" ]
    condition: always()
    jobs:
      - job: "Prefix"
        timeoutInMinutes: 0
        strategy:
          matrix:
            guest64:
              bit32: no
              guest: yes
        pool:
          vmImage: windows-2019
        steps:
        - bash: docker login --username $(DockerHub_user) --password '$(DockerHub_pass)'
          displayName: 'Docker Login'
        - bash: ./linux/docker-bootstrap.sh --from-os=cygwin2019 --force-32bit=$(bit32) --guest=$(guest) --timeout=5h --resume=yes --docker-push=yes
          displayName: 'Bootstrap'
          timeoutInMinutes: 0
  - stage: "cygwin2019_Final"
    dependsOn: [ "cygwin2019_Third" ]
    condition: always()
    jobs:
      - job: "Prefix"
        timeoutInMinutes: 0
        strategy:
          matrix:
            guest64:
              bit32: no
              guest: yes
        pool:
          vmImage: windows-2019
        steps:
        - bash: docker login --username $(DockerHub_user) --password '$(DockerHub_pass)'
          displayName: 'Docker Login'
        - bash: ./linux/docker-bootstrap.sh --from-os=cygwin2019 --force-32bit=$(bit32) --guest=$(guest) --resume=yes --docker-push=yes
          displayName: 'Bootstrap'
          timeoutInMinutes: 0

  - stage: "MacOS"
    dependsOn: []
    jobs:
      - job: "Prefix"
        timeoutInMinutes: 0
        strategy:
          matrix:
            current:
              macOS_version: 'macOS'
            highSierra:
              macOS_version: 'macOS High Sierra'
        pool:
          name: 'Hosted $(macOS_version)'
        steps:
        - script: set
          displayName: 'MacOS Info'
        - script: ./macos/prefix.sh
          timeoutInMinutes: 0
          displayName: 'MacOS Prefix'

  - stage: "fedora_First"
    dependsOn: []
    jobs:
      - job: "Prefix"
        timeoutInMinutes: 0
        strategy:
          matrix:
            rap64:
              bit32: no
              guest: no
            guest64:
              bit32: no
              guest: yes
            rap32:
              bit32: yes
              guest: no
            guest32:
              bit32: yes
              guest: yes
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
        - bash: docker login --username $(DockerHub_user) --password '$(DockerHub_pass)'
          displayName: 'Docker Login'
        - bash: ./linux/docker-bootstrap.sh --from-os=fedora --force-32bit=$(bit32) --guest=$(guest) --timeout=5h --docker-push=yes
          displayName: 'Bootstrap'
          timeoutInMinutes: 0
  - stage: "fedora_Final"
    dependsOn: [ "fedora_First" ]
    condition: always()
    jobs:
      - job: "Prefix"
        timeoutInMinutes: 0
        strategy:
          matrix:
            rap64:
              bit32: no
              guest: no
            guest64:
              bit32: no
              guest: yes
            rap32:
              bit32: yes
              guest: no
            guest32:
              bit32: yes
              guest: yes
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
        - bash: docker login --username $(DockerHub_user) --password '$(DockerHub_pass)'
          displayName: 'Docker Login'
        - bash: ./linux/docker-bootstrap.sh --from-os=fedora --force-32bit=$(bit32) --guest=$(guest) --resume=yes --docker-push=yes
          displayName: 'Bootstrap'
          timeoutInMinutes: 0

  - stage: "fedora28_First"
    dependsOn: []
    jobs:
      - job: "Prefix"
        timeoutInMinutes: 0
        strategy:
          matrix:
            rap64:
              bit32: no
              guest: no
            guest64:
              bit32: no
              guest: yes
            rap32:
              bit32: yes
              guest: no
            guest32:
              bit32: yes
              guest: yes
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
        - bash: docker login --username $(DockerHub_user) --password '$(DockerHub_pass)'
          displayName: 'Docker Login'
        - bash: ./linux/docker-bootstrap.sh --from-os=fedora28 --force-32bit=$(bit32) --guest=$(guest) --timeout=5h --docker-push=yes
          displayName: 'Bootstrap'
          timeoutInMinutes: 0
  - stage: "fedora28_Final"
    dependsOn: [ "fedora28_First" ]
    condition: always()
    jobs:
      - job: "Prefix"
        timeoutInMinutes: 0
        strategy:
          matrix:
            rap64:
              bit32: no
              guest: no
            guest64:
              bit32: no
              guest: yes
            rap32:
              bit32: yes
              guest: no
            guest32:
              bit32: yes
              guest: yes
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
        - bash: docker login --username $(DockerHub_user) --password '$(DockerHub_pass)'
          displayName: 'Docker Login'
        - bash: ./linux/docker-bootstrap.sh --from-os=fedora28 --force-32bit=$(bit32) --guest=$(guest) --resume=yes --docker-push=yes
          displayName: 'Bootstrap'
          timeoutInMinutes: 0

  - stage: "opensuse15_First"
    dependsOn: []
    jobs:
      - job: "Prefix"
        timeoutInMinutes: 0
        strategy:
          matrix:
            rap64:
              bit32: no
              guest: no
            guest64:
              bit32: no
              guest: yes
            rap32:
              bit32: yes
              guest: no
            guest32:
              bit32: yes
              guest: yes
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
        - bash: docker login --username $(DockerHub_user) --password '$(DockerHub_pass)'
          displayName: 'Docker Login'
        - bash: ./linux/docker-bootstrap.sh --from-os=opensuse15 --force-32bit=$(bit32) --guest=$(guest) --timeout=5h --docker-push=yes
          displayName: 'Bootstrap'
          timeoutInMinutes: 0
  - stage: "opensuse15_Final"
    dependsOn: [ "opensuse15_First" ]
    condition: always()
    jobs:
      - job: "Prefix"
        timeoutInMinutes: 0
        strategy:
          matrix:
            rap64:
              bit32: no
              guest: no
            guest64:
              bit32: no
              guest: yes
            rap32:
              bit32: yes
              guest: no
            guest32:
              bit32: yes
              guest: yes
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
        - bash: docker login --username $(DockerHub_user) --password '$(DockerHub_pass)'
          displayName: 'Docker Login'
        - bash: ./linux/docker-bootstrap.sh --from-os=opensuse15 --force-32bit=$(bit32) --guest=$(guest) --resume=yes --docker-push=yes
          displayName: 'Bootstrap'
          timeoutInMinutes: 0

  - stage: "opensuse16_First"
    dependsOn: []
    jobs:
      - job: "Prefix"
        timeoutInMinutes: 0
        strategy:
          matrix:
            rap64:
              bit32: no
              guest: no
            guest64:
              bit32: no
              guest: yes
            rap32:
              bit32: yes
              guest: no
            guest32:
              bit32: yes
              guest: yes
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
        - bash: docker login --username $(DockerHub_user) --password '$(DockerHub_pass)'
          displayName: 'Docker Login'
        - bash: ./linux/docker-bootstrap.sh --from-os=opensuse16 --force-32bit=$(bit32) --guest=$(guest) --timeout=5h --docker-push=yes
          displayName: 'Bootstrap'
          timeoutInMinutes: 0
  - stage: "opensuse16_Final"
    dependsOn: [ "opensuse16_First" ]
    condition: always()
    jobs:
      - job: "Prefix"
        timeoutInMinutes: 0
        strategy:
          matrix:
            rap64:
              bit32: no
              guest: no
            guest64:
              bit32: no
              guest: yes
            rap32:
              bit32: yes
              guest: no
            guest32:
              bit32: yes
              guest: yes
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
        - bash: docker login --username $(DockerHub_user) --password '$(DockerHub_pass)'
          displayName: 'Docker Login'
        - bash: ./linux/docker-bootstrap.sh --from-os=opensuse16 --force-32bit=$(bit32) --guest=$(guest) --resume=yes --docker-push=yes
          displayName: 'Bootstrap'
          timeoutInMinutes: 0

  - stage: "ubuntu_First"
    dependsOn: []
    jobs:
      - job: "Prefix"
        timeoutInMinutes: 0
        strategy:
          matrix:
            rap64:
              bit32: no
              guest: no
            rap32:
              bit32: yes
              guest: no
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
        - bash: docker login --username $(DockerHub_user) --password '$(DockerHub_pass)'
          displayName: 'Docker Login'
        - bash: ./linux/docker-bootstrap.sh --from-os=ubuntu --force-32bit=$(bit32) --guest=$(guest) --timeout=5h --docker-push=yes
          displayName: 'Bootstrap'
          timeoutInMinutes: 0
  - stage: "ubuntu_Final"
    dependsOn: [ "ubuntu_First" ]
    condition: always()
    jobs:
      - job: "Prefix"
        timeoutInMinutes: 0
        strategy:
          matrix:
            rap64:
              bit32: no
              guest: no
            rap32:
              bit32: yes
              guest: no
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
        - bash: docker login --username $(DockerHub_user) --password '$(DockerHub_pass)'
          displayName: 'Docker Login'
        - bash: ./linux/docker-bootstrap.sh --from-os=ubuntu --force-32bit=$(bit32) --guest=$(guest) --resume=yes --docker-push=yes
          displayName: 'Bootstrap'
          timeoutInMinutes: 0

  - stage: "ubuntu16_First"
    dependsOn: []
    jobs:
      - job: "Prefix"
        timeoutInMinutes: 0
        strategy:
          matrix:
            rap64:
              bit32: no
              guest: no
            rap32:
              bit32: yes
              guest: no
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
        - bash: docker login --username $(DockerHub_user) --password '$(DockerHub_pass)'
          displayName: 'Docker Login'
        - bash: ./linux/docker-bootstrap.sh --from-os=ubuntu16 --force-32bit=$(bit32) --guest=$(guest) --timeout=5h --docker-push=yes
          displayName: 'Bootstrap'
          timeoutInMinutes: 0
  - stage: "ubuntu16_Final"
    dependsOn: [ "ubuntu16_First" ]
    condition: always()
    jobs:
      - job: "Prefix"
        timeoutInMinutes: 0
        strategy:
          matrix:
            rap64:
              bit32: no
              guest: no
            rap32:
              bit32: yes
              guest: no
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
        - bash: docker login --username $(DockerHub_user) --password '$(DockerHub_pass)'
          displayName: 'Docker Login'
        - bash: ./linux/docker-bootstrap.sh --from-os=ubuntu16 --force-32bit=$(bit32) --guest=$(guest) --resume=yes --docker-push=yes
          displayName: 'Bootstrap'
          timeoutInMinutes: 0
